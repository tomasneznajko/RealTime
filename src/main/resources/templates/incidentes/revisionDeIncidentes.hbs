{{#partial "contenido" }}

    <table class="table table-sm table-shadow">
        <thead class="table-light">
        <tr>
            <th class="table__item">#</th>
            <th class="table__item">Autor</th>
            <th class="table__item">Servicio</th>
            <th class="table__item">Establecimiento</th>
            <th class="table__item">Estado</th>
            <th class="table__item"></th>
        </tr>
        </thead>

        <tbody class="table-group-divider">
        {{#each incidentes}}
            <tr class="center">
                <td class="table__item">
                    {{this.establecimiento.nombre}}
                </td>
                <td class="table__item">
                    <a href="incidentes/{{this.id}}">Ver m√°s</a>
                </td>
            </tr>
        {{/each}}
        </tbody>
    </table>
    <div id="map">
        
    </div>
<script>
    let map, infoWindow;

function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
        center: { lat: -34.397, lng: 150.644 },
        zoom: 15,
    });
    infoWindow = new google.maps.InfoWindow();

    const locationButton = document.createElement("button");

    locationButton.textContent = "Obtener incidentes cercanos";
    locationButton.classList.add("custom-map-control-button");
    map.controls[google.maps.ControlPosition.TOP_CENTER].push(
        locationButton
    );
    locationButton.addEventListener("click", () => {
        // Try HTML5 geolocation.
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                (position) => {
                    const pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,

                    };
                    enviarUbicacion(pos.lat, pos.lng);
                    infoWindow.setPosition(pos);
                    infoWindow.setContent("Ubicacion detectada.");
                    infoWindow.open(map);
                    map.setCenter(pos);
                },
                () => {
                    handleLocationError(true, infoWindow, map.getCenter());
                },
            );
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
    });
}

function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(
        browserHasGeolocation
            ? "Error: The Geolocation service failed."
            : "Error: Your browser doesn't support geolocation."
    );
    infoWindow.open(map);
}

window.initMap = initMap;
function enviarUbicacion(latitud, longitud) {
    // Configura los datos que quieres enviar al servidor
    var data = {
        latitud: latitud,
        longitud: longitud
    };
    console.log(data);

    fetch('/revisarIncidentes', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
        .then(response => response.json())
        .then(data => {
            console.log('Respuesta del servidor:', data);
            // Haz algo con la respuesta del servidor si es necesario
        })
        .catch(error => {
            console.error('Error:', error);
        });
}
</script>



    {{/partial}}
{{> templates/base }}